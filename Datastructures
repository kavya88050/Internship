PROBLEM-1
SQUARE ROOT OF A NUMBER:(JAVA)
public class Demo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter any number:");
        int num = scanner.nextInt();
        System.out.println("Square root of the given number is: "+Math.sqrt(num));
        scanner.close();
    }
}

PROBLEM-2
NUBER OF UNIQUE ELEMENTS
import java.util.*;
public class Main
{
public static void main (String[]args){
  Scanner sc = new Scanner (System.in);
  int[] a = new int[50];
  System.out.println ("enter size of an array");  
  int size = sc.nextInt ();
  System.out.println ("enter elements of an array b");  
  for (int i = 0; i < size; i++){
  a[i] = sc.nextInt ();
}
  System.out.println ("total distinct number of element " +
  DCount (a, size));
}
  public static int DCount (int a[], int n) {
  int res = 0;
  for (int i = 0; i < n; i++){ 
  int j;
  for (j = 0; j < i; j++)
   if (a[i] == a[j])
   break;
  if (i == j){
  res++;
  }
}
  return res;
 }
}

PROBLEM-3
BINARY SEARCH OF ARRAY

import java.math.*;
import java.util.regex.*;

public class Solution {
    public static boolean binarySearchIterative(int[] array, int x) {
        int left = 0;
        int right = array.length - 1;
        while (left <= right) {
            int mid = left + ((right - left) / 2);
            if (array[mid] == x) {
                return true;
            } else if (x < array[mid]) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return false;
    }

PROGRAM-4
FREQUENCY OF ELEMENTS IN ARRAY

import java.util.Arrays;
import java.util.Scanner;  
public class test {
    public static void main(String[] args) {
        Scanner input = new Scanner (System.in);
        int[] arr = new int[8];
         System.out.println("Elements are not of original array");
         for (int i = 0;i< arr.length; i++) {           
           arr[i]=input.nextInt();
               
       }
            int [] fr = new int [arr.length];  
            int visited = -1;  
            
            for(int i = 0; i < arr.length; i++){  
                int count = 1;  
                for(int j = i+1; j < arr.length; j++){  
                    if(arr[i] == arr[j]){  
                        count++;  
                        fr[j] = visited;  
                    }  
                }  
                if(fr[i] != visited)  
                    fr[i] = count;  
            }  
             
            for(int i = 0; i < fr.length; i++){  
                if(fr[i] != visited)  
                    System.out.println(arr[i] + " occurs "+ fr[i]+" times ");  
            }  
        } 
    }
